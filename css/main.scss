@import 'normalize-scss/_normalize';
@import 'compass-mixins/lib/_compass';
@import 'compass-mixins/lib/animation/_core';
@import 'compass-mixins/lib/compass/css3/_user-interface';

@function compact($vars...) {
  $list: ();
  @each $var in $vars {
      @if $var {
          $list: append($list, $var, comma);
      }
  }
  @return $list;
}

@font-face {
  font-family: 'DSEG7Classic-Regular';
  font-style: normal;
  font-weight: 400;
  src: url(/css/DSEG7Classic-Regular.woff) format('woff');
}


$primary-color: #fff;
$primary-line-height: 1.5;
$background-color: #212121;


$screen-tablet: 480px;
$screen-desktop: 992px;
$screen-lg-desktop: 1200px;

$default-padding: 0.5rem;
$border-color: rgb(75, 75, 75);
$button-border-color: rgba(58, 58, 58, 1);
$control-background: rgba(0,0,0,0.8);

@mixin action-button($defaultSize, $largeSize, $xlSize) {
  background: rgba(255,255,255,.9);
  @include border-radius(50%);
  @include box-shadow(1px 1px 1px rgba(0,0,0,.5));
  color: black;
  cursor: pointer;
  height: $defaultSize;
  text-align: center;
  width: $defaultSize;

  &:hover, &:active, &:focus {
    background: rgba(255,255,255, 0.75);
    outline: none;
  }

  &:hover:after {
    @include transform(scale(1.1));
  }

  @media screen and (min-width: $screen-desktop) {
    height: $largeSize;
    width: $largeSize;
  }

  @media screen and (min-width: $screen-lg-desktop) {
    height: $xlSize;
    width: $xlSize;
  }
}

.action-button-icon {
  position: relative;
  z-index: 10;
}

$action-button-size: 24px;
$action-button-padding: 4px;
$action-button-large-size: 48px;
$action-button-total-size: $action-button-size + $action-button-padding * 2;

.action-button {
  @include action-button(
      $action-button-total-size, $action-button-total-size, $action-button-large-size);
  box-sizing: border-box;
  display: inline-block;

  padding: $action-button-padding;
  position: relative;

  svg {
    height: $action-button-size;
    left: $action-button-padding;
    position: absolute;
    top: $action-button-padding;
    width: $action-button-size;
    z-index: 10;

    @media screen and (min-width: $screen-lg-desktop) {
      height: 40px;
      width: 40px;
    }
  }

  @media screen and (min-width: $screen-lg-desktop) {
    .action-button-icon {
      font-size: $action-button-large-size - 2 * $action-button-padding;
    }
  }

  &:after {
    content: '';
    display: block;
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    background: inherit;
    z-index: 10;
    pointer-events: none;
    border-radius: inherit;
    border: 1px solid rgba(0,0,0,.65);
    box-shadow: inherit;
    box-sizing: border-box;
    @include transition(all 0.25s ease-in-out);
    z-index: 5;
  }
}

html, body {
  height: 100%;
  width: 100%;
}

html {
  color: $primary-color;
  font-family: 'Josefin Slab';
  font-size: 24px;
  @media screen and (min-width: $screen-desktop) {
    font-size: 32px;
  }

  @media screen and (min-width: $screen-lg-desktop) {
    font-size: 44px;
  }

  background-color: $background-color;
}

.vertical-layout {
  flex-direction: column;
  display: flex;
  margin: 0;
  min-height: 100%;
  padding: 0 $default-padding;
}

.placeholder {
  flex-grow: 1;
  min-height: 0;
}

.canvas {
  border: 1px solid $border-color;
  box-sizing: border-box;
  flex-grow: 0;
  @include border-radius(4px);
  margin: 0.5rem auto;
  max-width: 700px;
  position: relative;
  text-align: center;
  width: 100%;

  @media screen and (min-width: $screen-lg-desktop) {
    max-width: 1200px;
  }

  .edit-only, .edit-only-block, .edit-only-inline-block {
    display: none;
  }

  &.editing {
    .edit-only {
      display: initial;
    }

    .edit-only-block {
      display: block;
    }

    .edit-only-inline-block {
      display: inline-block;
    }

    .view-only {
      display: none;
    }
  }
}

input {
  background: $control-background;
  padding: 0.1rem 0.125rem;
}

input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.select-wrapper {
  display: inline-block;
  position: relative;

  &:before {
    color: inherit;
    content: 'â–¼';
    font-size: 0.6em;
    display: block;
    pointer-events: none;
    position: absolute;
    right: 0.25rem;
    @include transform(translateY(-50%));
    top: 50%;
    z-index: 1;
  }
}

select {
  @include appearance(none);
  background: $control-background;
  padding-right: 1rem;
  border-color: $button-border-color;
  position: relative;
}


hr {
  border-bottom-width: 0;
  color: $border-color;
  margin: 0;
}

.vertical-line {
  border-right: 1px solid $border-color;
  color: $border-color;
  margin: 0;
}

@include keyframes(level-up) {
  0% { @include transform(none); }
  50% { @include transform(scale(1.5)); }
  100% { @include transform(none); }
}

.level {
  font-family: 'Orbitron';
  font-size: 1.5rem;
  line-height: 1.5;

  .level-span.animate {
    animation-duration: 1s;
    animation-name: level-up;
  }

  input {
    width: 2rem;
  }
}

.timer-container {
  cursor: default;
  padding: $default-padding;
  @include user-select(none);
}

.timer {
  border: 1px solid rgba(255,255,255,0.3);
  @include border-radius(0.25rem);
  @include box-shadow(1px 1px rgba(255,255,255,0.1));
  box-sizing: border-box;
  color: red;
  background: black;
  font-size: 3.5rem;
  overflow: hidden;
  padding: $default-padding 0;
}

@for $i from 1 through 2 {
  @include keyframes(level-end-notice-#{$i}) {
    0% { opacity: 1; }
    50% { opacity: 0; }
    100% { opacity: 1; }
  }
}

.timer-text {
  font-family: 'DSEG7Classic-Regular';
  display: inline-block;
  vertical-align: middle;

  input {
    text-align: right;
    width: 6rem;
  }

  .levelend {
    animation-duration: 0.5s;
    animation-name: level-end-notice-1;
  }

  .levelend.odd {
    animation-name: level-end-notice-2;
  }
}

.toggle-container {
  padding-bottom: $default-padding;
}

.toggle-button {
  @include action-button(48px, 96px, 96px);
  margin: 0 auto;
  position: relative;

  svg {
    @include transform(rotate(180deg));
    @include transition(transform 0.5s ease-in-out);

    &.paused {
      @include transform(none);
    }
  }

  &.loading:before {
    animation: loading-spinner 1s linear infinite;
    border-color: #9e9db9;
    border-radius: 0 50% 50% 0;
    border-style: solid;
    border-bottom: none;
    border-left: none;
    border-top: none;
    box-sizing: border-box;
    content: "";
    display: block;
    height: calc(100% + 4px);
    left: -2px;
    position: absolute;
    top: -2px;
    width: calc(100% + 4px);
    z-index: 100;
  }
}

@include keyframes(loading-spinner) {
  0%   { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.requires-edit-permission,
.requires-edit-permission-inline-block {
  display: none;
}

.has-edit-permission {
  .requires-edit-permission {
    display: block;
  }

  .requires-edit-permission-inline-block {
    display: inline-flex;
  }
}

.blinds-player-container {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;

  & > div {
    display: inline-block;
    min-width: 100%;
    flex: 1;
  }

  .vertical-line {
    display: none;
  }

  hr {
    width: 100%
  }

  @media screen and (min-width: $screen-lg-desktop) {
    & > div {
      min-width: 0;
    }

    .vertical-line {
      display: inline-block;
    }

    hr {
      display: none;
    }
  }
}

.blinds {
  line-height: $primary-line-height;
  padding-bottom: $default-padding;
  padding-top: $default-padding;

  .current.animate {
    animation-duration: 1s;
    animation-name: level-up;
  }

  .next {
    font-size: 0.8rem;
    line-height: 1;
  }
}

.edit-blind-container {
  padding-bottom: $default-padding;
}

.blind-table-container {
  overflow-x: auto;
  width: 100%;
}

.blind-table {
  margin: 0 auto;

  &.loading {
    input {
      display: none;
    }

    .field {
      opacity: 1 !important;
    }
  }

  th, td {
    border: 1px solid $border-color;
  }

  th {
    padding: 0.25rem;
  }

  thead tr {
    background: rgb(20, 21, 23);
  }

  tr:nth-child(2n) {
    th, td {
      background: rgb(45, 45, 45);
    }

    td:last-child {
      background: none;
    }
  }

  td {
    padding: 0 0.25rem;

    &.remove-level-button {
      cursor: pointer;
      color: rgb(128, 128, 128);
      vertical-align: middle;

      &:hover, &:focus, &:active {
        color: rgb(255, 255, 255);
        outline: 0;
      }

      .action-button-icon {
        display: block;
      }
    }
  }

  td:last-child {
    border: none;
  }

  .field-group {
    padding-bottom: 0.25rem;
    padding-top: 0.25rem;
    position: relative;

    & > input {
      background: black;
      bottom: 0;
      box-sizing: border-box;
      left: 50%;
      opacity: 0;
      position: absolute;
      text-align: center;
      top: 0;
      @include transform(translateX(-50%));
      width: 100%;
    }

    input:focus {
      opacity: 1;
    }

    &:hover, &:focus, &:active {
      .field {
        opacity: 0;
      }
      input {
        opacity: 1;
      }
    }
  }

  .time-item {
    align-items: center;
    flex-direction: row;
    display: flex;
    padding: 0;
    width: 3.5rem;
  }

  .time-group {
    flex-grow: 1;
    display: inline-block;
    height: 100%;
    vertical-align: middle;
  }
}

.add-level-button {
  @include action-button(32px, 32px, 48px);
  align-items: center;
  display: flex;
  justify-content: center;
  margin: $default-padding auto;

   @media screen and (min-width: $screen-lg-desktop) {
    .action-button-icon {
      font-size: 32px;
    }
  }
}

.players {
  line-height: $primary-line-height;
  padding-bottom: $default-padding;
  padding-top: $default-padding;

  .players-field > input,
  .players-started-field > input {
    width: 2.5rem;
  }

  .starting-chips > input {
    width: 3rem;
  }

  .remove-player-container {
    margin: 0 auto;
  }
}

.remove-player-button {
  display: none;
  vertical-align: middle;

  &.has-edit-permission {
    display: inline-block;
  }
}

.favorites {
  overflow: hidden;
  padding-bottom: $default-padding;
  padding-top: $default-padding;
  position: relative;
  text-align: right;

  .favorites-input-container {
    position: absolute;
    right: 0;
    top: $default-padding;
    z-index: 5;

    .favorites-input {
      padding-right: 16px;
      position: relative;
      right: -100%;
      @include transition(all 0.25s ease-in-out);

      input {
        width: 4rem;
      }

      & > div {
        @include transform(rotate(90deg));
        @include transition(all 0.125s ease-in-out);
        vertical-align: middle;

        &:hover, &:active, &:focus {
          @include transform(scale(1.1));
        }
      }


      & > .ok-button,
      & > .trash-button {
        @include transform(scale(0));

        &.valid {
          @include transform(scale(1));

          &:hover, &:active, &:focus {
            @include transform(scale(1.1));
          }
        }
      }

      &.active {
        @include transition(all 0.25s ease-in-out, right 0.25s 0.25s ease-in-out);
        right: 0;

        & > .cancel-button {
          @include transform(none);

          &:hover, &:active, &:focus {
            @include transform(scale(1.1));
          }
        }
      }
    }
  }
}

.favorite-button-container {
  display: inline-block;
  position: relative;

  .favorite-action-buttons {
    margin-right: 16px;
    position: relative;
    right: 0;
    @include transition(all 0.25s ease-in-out, right 0.25s 0.25s ease-in-out);
    z-index: 10;

    & > .action-button {
      @include transition(all 0.25s ease-in-out)
    }

    &.active {
      right: calc(-100% - 1px);  // 1px to account for border.
      @include transition(all 0.25s ease-in-out);
      z-index: 1;

      & > .action-button {
        @include transform(rotate(90deg));
      }
    }
  }

  .load-button {
    vertical-align: middle;
  }

  .favorite-button {
    vertical-align: middle;
    z-index: 10;

    & > svg {
      fill: rgb(237, 237, 73);
    }
  }
}

.action-buttons {
  overflow: hidden;
  padding: 4px;
  position: absolute;
  right: 12px;
  top: 8px;
  z-index: 100;
}

.edit-button,
.notification-button {
  position: absolute;
  @include transition(all 0.25s ease-in-out, right 0.25s 0.25s ease-in-out);
}

.edit-button {
  right: 4px;
}

.notification-button {
  right: 40px;

  @media screen and (min-width: $screen-lg-desktop) {
    right: 56px;
  }

  & > .active {
    color: #2971e0;
  }
}

.ok-button, .cancel-button {
  right: calc(-100% - 24px);
  @include transform(rotate(90deg));
}

.editing {
  .edit-button,
  .notification-button {
    @include transition_delay(0s);
    @include transform(rotate(90deg));
    right: -50%;
  }

  .ok-button, .cancel-button {
    right: 0;
    @include transition(all 0.25s ease-in-out, right 0.25s 0.25s ease-in-out);
    @include transform(none);

    &:hover, &:active, &:focus {
      @include transform(scale(1.1));
    }
  }
}

.share-button {
  left: 16px;
  position: absolute;
  top: 8px;
}

.share-link {
  flex-grow: 0;
  margin-bottom: 32px;
  margin-top: $default-padding;
  text-align: center;

  .qr-code {
    border: 5px solid white;
    display: inline-flex;
    margin: $default-padding auto;
  }
}

.invites-manager {
  background: #fff;
  border-radius: 4px;
  box-sizing: border-box;
  margin-top: 8px;
  max-width: calc(100vw - 48px);
  padding: 16px;
  width: 500px;
}

.invite-request {
  color: black;
  border-top: 1px solid rgba(0,0,0,0.38);
  padding-bottom: 8px;
  padding-top: 8px;
}

.invite-request:first-child {
  border-top: none;
  padding-top: 0px;
}

.invite-requestor {
  color: black;
  text-align: start;
  word-break: break-word;
}

.invite-name {
  font-weight: 600;
}

.invite-email {
  color: #717171;
}

.invite-buttons {
  color: rgba(0,0,0,0.54);
  display: flex;
  justify-content: flex-end;
}

.invite-action {
  cursor: pointer;
  padding: 4px;
}

.no-invites {
  color: rgba(0,0,0,0.65);
  font-style: italic;
}